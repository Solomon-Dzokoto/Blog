type CardProps = {
  icon: React.ReactNode
  title: string
  text: string
}











const CheckIcon = () =>{ 
    return (
        <svg width="20" height="20" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.33 3.624C9.42949 3.71145 9.49021 3.83481 9.49883 3.96698C9.50746 4.09916 9.46328 4.22936 9.376 4.329L5.876 8.329C5.83097 8.3806 5.77581 8.42239 5.71396 8.45179C5.6521 8.48119 5.58487 8.49757 5.51643 8.49991C5.44798 8.50226 5.37978 8.49051 5.31606 8.46542C5.25234 8.44032 5.19446 8.40239 5.146 8.354L3.146 6.354C3.09951 6.30751 3.06264 6.25232 3.03748 6.19158C3.01232 6.13084 2.99937 6.06574 2.99937 6C2.99937 5.93426 3.01232 5.86916 3.03748 5.80842C3.06264 5.74768 3.09951 5.69249 3.146 5.646C3.19249 5.59951 3.24768 5.56264 3.30842 5.53748C3.36916 5.51232 3.43426 5.49937 3.5 5.49937C3.56574 5.49937 3.63084 5.51232 3.69158 5.53748C3.75232 5.56264 3.80751 5.59951 3.854 5.646L5.476 7.268L8.624 3.671C8.71131 3.57137 8.83459 3.51046 8.96678 3.50165C9.09896 3.49284 9.23024 3.53684 9.33 3.624ZM0 3C0 2.20435 0.316071 1.44129 0.87868 0.87868C1.44129 0.316071 2.20435 0 3 0H9C9.79565 0 10.5587 0.316071 11.1213 0.87868C11.6839 1.44129 12 2.20435 12 3V9C12 9.79565 11.6839 10.5587 11.1213 11.1213C10.5587 11.6839 9.79565 12 9 12H3C2.20435 12 1.44129 11.6839 0.87868 11.1213C0.316071 10.5587 0 9.79565 0 9V3ZM3 1C2.46957 1 1.96086 1.21071 1.58579 1.58579C1.21071 1.96086 1 2.46957 1 3V9C1 9.53043 1.21071 10.0391 1.58579 10.4142C1.96086 10.7893 2.46957 11 3 11H9C9.53043 11 10.0391 10.7893 10.4142 10.4142C10.7893 10.0391 11 9.53043 11 9V3C11 2.46957 10.7893 1.96086 10.4142 1.58579C10.0391 1.21071 9.53043 1 9 1H3ZM2.754 13C3.304 13.614 4.101 14 4.99 14H9.49C10.0809 14 10.6661 13.8836 11.2121 13.6575C11.758 13.4313 12.2541 13.0998 12.672 12.682C13.0898 12.2641 13.4213 11.768 13.6475 11.2221C13.8736 10.6761 13.99 10.0909 13.99 9.5V5C13.99 4.116 13.607 3.32 12.999 2.772V8C12.999 8.1 12.9957 8.19967 12.989 8.299V9.499C12.989 10.4273 12.6203 11.3175 11.9639 11.9739C11.3075 12.6303 10.4173 12.999 9.489 12.999H8.055L7.999 13H2.754Z" fill="white"/>
</svg>

    )
}
const IdeaIcon = () =>{ 
    return (
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fillRule="evenodd" clipRule="evenodd" d="M14.1243 0C14.6171 0 15.0171 0.4 15.0171 0.892857V2.06429C15.0171 2.30109 14.9231 2.52819 14.7556 2.69563C14.5882 2.86307 14.3611 2.95714 14.1243 2.95714C13.8875 2.95714 13.6604 2.86307 13.4929 2.69563C13.3255 2.52819 13.2314 2.30109 13.2314 2.06429V0.892857C13.2314 0.4 13.6314 0 14.1243 0ZM5.78143 12.4829C6.24295 12.4922 6.70169 12.4094 7.1308 12.2393C7.55992 12.0691 7.95077 11.8151 8.28047 11.492C8.61018 11.1689 8.8721 10.7833 9.05092 10.3577C9.22973 9.93216 9.32183 9.47518 9.32183 9.01357C9.32183 8.55196 9.22973 8.09499 9.05092 7.66941C8.8721 7.24384 8.61018 6.85823 8.28047 6.53514C7.95077 6.21206 7.55992 5.95801 7.1308 5.78787C6.70169 5.61773 6.24295 5.53492 5.78143 5.54429C4.87351 5.56271 4.00899 5.93632 3.3734 6.58493C2.73782 7.23354 2.38183 8.10546 2.38183 9.01357C2.38183 9.92168 2.73782 10.7936 3.3734 11.4422C4.00899 12.0908 4.87351 12.4644 5.78143 12.4829ZM0 19.4214C0.0238577 17.9037 0.64354 16.4561 1.72531 15.3912C2.80707 14.3263 4.26418 13.7295 5.78214 13.7295C7.30011 13.7295 8.75721 14.3263 9.83898 15.3912C10.9207 16.4561 11.5404 17.9037 11.5643 19.4214C11.5643 19.5749 11.5033 19.722 11.3948 19.8305C11.2863 19.939 11.1392 20 10.9857 20H0.578571C0.425125 20 0.277963 19.939 0.16946 19.8305C0.0609565 19.722 0 19.5749 0 19.4214ZM19.5943 3.56143C19.6924 3.49499 19.7764 3.40967 19.8412 3.31046C19.906 3.21124 19.9505 3.10011 19.9719 2.98354C19.9934 2.86697 19.9914 2.7473 19.9661 2.63151C19.9408 2.51572 19.8927 2.40612 19.8246 2.30911C19.7565 2.2121 19.6698 2.12961 19.5695 2.06646C19.4692 2.00331 19.3573 1.96077 19.2404 1.9413C19.1235 1.92184 19.0039 1.92585 18.8885 1.95309C18.7732 1.98034 18.6644 2.03028 18.5686 2.1L17.61 2.77286C17.4206 2.91062 17.2929 3.11726 17.2545 3.34827C17.216 3.57927 17.2699 3.81614 17.4044 4.00783C17.5389 4.19951 17.7434 4.33067 17.9737 4.37302C18.204 4.41539 18.4418 4.36556 18.6357 4.23429L19.5943 3.56143ZM8.43286 2.31857C8.29703 2.51224 8.2436 2.7519 8.28431 2.98492C8.32503 3.21794 8.45655 3.42529 8.65 3.56143L9.61 4.23429C9.70585 4.30401 9.81462 4.35395 9.92996 4.38119C10.0453 4.40844 10.1649 4.41245 10.2818 4.39298C10.3988 4.37352 10.5106 4.33097 10.6109 4.26782C10.7112 4.20468 10.7979 4.12219 10.866 4.02518C10.9341 3.92816 10.9822 3.81857 11.0075 3.70277C11.0328 3.58698 11.0348 3.46731 11.0133 3.35074C10.9919 3.23418 10.9475 3.12304 10.8826 3.02383C10.8178 2.92461 10.7339 2.8393 10.6357 2.77286L9.67571 2.1C9.48204 1.96417 9.24239 1.91075 9.00936 1.95146C8.77634 1.99217 8.569 2.12369 8.43286 2.31714V2.31857ZM14.0571 4.05714C14.48 4.053 14.8995 4.13232 15.2916 4.29057C15.6837 4.44882 16.0407 4.68288 16.3422 4.97935C16.6438 5.27581 16.8838 5.62885 17.0486 6.01825C17.2135 6.40764 17.2999 6.82574 17.3029 7.24857C17.2886 8.42 16.5886 9.53429 15.54 10.0571V11.6471C15.537 11.7394 15.4985 11.8269 15.4325 11.8913C15.3664 11.9558 15.278 11.9922 15.1857 11.9929H13.06C12.9677 11.9922 12.8793 11.9558 12.8132 11.8913C12.7472 11.8269 12.7087 11.7394 12.7057 11.6471V10.0843C12.2014 9.82742 11.7735 9.44251 11.4648 8.96813C11.1562 8.49374 10.9777 7.94656 10.9471 7.38143C10.9325 6.9588 11.0013 6.53742 11.1498 6.14144C11.2982 5.74547 11.5233 5.38268 11.8123 5.07387C12.1012 4.76505 12.4482 4.51628 12.8334 4.34182C13.2186 4.16735 13.6345 4.07061 14.0571 4.05714Z" fill="white"/>
</svg>

    )
}
const UserIcon = () => {
  return (
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 14"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12.5 0.333374C11.6159 0.333374 10.7681 0.684563 10.143 1.30968C9.51784 1.93481 9.16665 2.78265 9.16665 3.66671C9.16665 4.55076 9.51784 5.39861 10.143 6.02373C10.7681 6.64885 11.6159 7.00004 12.5 7.00004C13.384 7.00004 14.2319 6.64885 14.857 6.02373C15.4821 5.39861 15.8333 4.55076 15.8333 3.66671C15.8333 2.78265 15.4821 1.93481 14.857 1.30968C14.2319 0.684563 13.384 0.333374 12.5 0.333374ZM12.5 1.91671C12.7298 1.91671 12.9574 1.96197 13.1697 2.04992C13.382 2.13786 13.5749 2.26677 13.7374 2.42927C13.8999 2.59177 14.0288 2.78469 14.1168 2.99701C14.2047 3.20933 14.25 3.43689 14.25 3.66671C14.25 3.89652 14.2047 4.12408 14.1168 4.3364C14.0288 4.54872 13.8999 4.74164 13.7374 4.90414C13.5749 5.06665 13.382 5.19555 13.1697 5.2835C12.9574 5.37144 12.7298 5.41671 12.5 5.41671C12.2702 5.41671 12.0426 5.37144 11.8303 5.2835C11.618 5.19555 11.425 5.06665 11.2625 4.90414C11.1 4.74164 10.9711 4.54872 10.8832 4.3364C10.7952 4.12408 10.75 3.89652 10.75 3.66671C10.75 3.20258 10.9344 2.75746 11.2625 2.42927C11.5907 2.10108 12.0359 1.91671 12.5 1.91671ZM3.33331 2.83337V5.33337H0.833313V7.00004H3.33331V9.50004H4.99998V7.00004H7.49998V5.33337H4.99998V2.83337H3.33331ZM12.5 7.83337C10.275 7.83337 5.83331 8.94171 5.83331 11.1667V13.6667H19.1666V11.1667C19.1666 8.94171 14.725 7.83337 12.5 7.83337ZM12.5 9.41671C14.975 9.41671 17.5833 10.6334 17.5833 11.1667V12.0834H7.41665V11.1667C7.41665 10.6334 9.99998 9.41671 12.5 9.41671Z"
        fill="white"
      />
    </svg>
  )
}

const Card = ({ cardInfo }: { cardInfo: CardProps }) => {
  const { icon, title, text } = cardInfo
  return (
    <div
      className={
        "flex w-full flex-col items-start justify-start gap-6 md:gap-10 rounded-xl border border-[#E2E2E2] p-5"
      }
    >
      <div className="flex h-10 w-10 items-center justify-center rounded-sm bg-[#2A2A2A]">
        {icon}
      </div>

      <div>
        <span className="md:text-[1.35rem] text-[1.15rem] leading-7 font-bold">{title}</span>
        <p className="mt-2 text-xs md:text-sm leading-5">{text}</p>
      </div>
    </div>
  )
}

const cardArray: CardProps[] = [
  {
    icon: <UserIcon />,
    title: "Sign Up",
    text: "Create your account in minutes and gain access to an AI-powered calling system. No technical setup required",
  },
  {
    icon: <CheckIcon />,
    title: "Create Your Campaign",
    text: "Set up a new campaign in minutes by choosing your AI agent, Defining your call script and uploading your contact list.",
  },
  {
    icon: <IdeaIcon />,
    title: "AI Makes the Calls",
    text: "Once your campaign is live, the AI agent automatically dials each contact, delivers your message naturally, and engages with customer.",
  },
  {
    icon: <UserIcon />,
    title: "Track Calls in Real Time",
    text: "Stay in control by monitoring calls as they happen. Listen to live conversations, read real-time transcriptions, and see caller details instantly.",
  },
  {
    icon: <CheckIcon />,
    title: "Review Call Outcomes",
    text: "After each call, access detailed reports showing call results, including answered calls, missed calls, voicemails etc",
  },
  {
    icon: <IdeaIcon />,
    title: "Optimize & Improve",
    text: "Use call analytics to refine your outreach strategy to improve engagement based on real-time performance data.",
  },
]

function HowItWorksSection() {
  return (
    <section className="flex flex-col items-center justify-center gap-8 p-8">
      <div className="flex max-w-[580px] flex-col items-center justify-center gap-1.5 md:gap-3">
        <h2 className="text-center text-3xl md:text-[2.5rem] leading-10 md:leading-16 font-bold">
          How It Works
        </h2>
        <p className="text-center text-sm md:text-base leading-6">
          Easily set up your campaign, let AI handle the calls, and stay in
          control with real-time tracking and insights.
        </p>
      </div>

      <div className="grid w-full grid-cols-1 justify-center gap-y-10 gap-x-10 md:gap-y-14 md:grid-cols-2 lg:grid-cols-3">
        {cardArray.map((card) => (
          <Card key={card.title} cardInfo={card} />
        ))}
      </div>
    </section>
  )
}

export default HowItWorksSection
